{
  "contractName": "IValidator",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "isValidator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"isValidator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Observing network contract interface\",\"methods\":{\"isValidator(address)\":{\"details\":\"Be sure than address is really validator\",\"return\":\"true when validator address in argument\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/IValidator.sol\":\"IValidator\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/IValidator.sol\":{\"keccak256\":\"0x5a07a552141cda2556c8fa41725e2e63ca34f1c4d3686fb6dcc458f535dd56c4\",\"urls\":[\"bzzr://ff3b3845346bb7be2512022d894a855b000f4322f68daae373449818908d1964\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @dev Observing network contract interface\n */\ncontract IValidator {\n    /**\n     * @dev Be sure than address is really validator\n     * @return true when validator address in argument\n     */\n    function isValidator(address _validator) external returns (bool);\n}\n\n",
  "sourcePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/IValidator.sol",
  "ast": {
    "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/IValidator.sol",
    "exportedSymbols": {
      "IValidator": [
        294
      ]
    },
    "id": 295,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 286,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@dev Observing network contract interface",
        "fullyImplemented": false,
        "id": 294,
        "linearizedBaseContracts": [
          294
        ],
        "name": "IValidator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Be sure than address is really validator\n@return true when validator address in argument",
            "id": 293,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "name": "_validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "249:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "248:20:6"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "287:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "286:6:6"
            },
            "scope": 294,
            "src": "228:65:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 295,
        "src": "78:217:6"
      }
    ],
    "src": "0:297:6"
  },
  "legacyAST": {
    "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/IValidator.sol",
    "exportedSymbols": {
      "IValidator": [
        294
      ]
    },
    "id": 295,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 286,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@dev Observing network contract interface",
        "fullyImplemented": false,
        "id": 294,
        "linearizedBaseContracts": [
          294
        ],
        "name": "IValidator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Be sure than address is really validator\n@return true when validator address in argument",
            "id": 293,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "name": "_validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "249:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "248:20:6"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "287:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "286:6:6"
            },
            "scope": 294,
            "src": "228:65:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 295,
        "src": "78:217:6"
      }
    ],
    "src": "0:297:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-26T15:15:42.895Z",
  "devdoc": {
    "details": "Observing network contract interface",
    "methods": {
      "isValidator(address)": {
        "details": "Be sure than address is really validator",
        "return": "true when validator address in argument"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}