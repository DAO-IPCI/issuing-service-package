{
  "contractName": "Emitter",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "certificates",
      "outputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NewToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "liability",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "issueCertificate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "liability",
          "type": "address"
        }
      ],
      "name": "claimCertificate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"certificates\",\"outputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"liability\",\"type\":\"address\"}],\"name\":\"claimCertificate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"liability\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"issueCertificate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NewToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/vadim/Projects/issuing-service-package/contracts/contracts/Emitter.sol\":\"Emitter\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/vadim/Projects/issuing-service-package/contracts/contracts/Emitter.sol\":{\"keccak256\":\"0x15196df9dac0232b65d3dcaafde840d66135711bfc0809a78d1d2296d7cfb564\",\"urls\":[\"bzzr://f4a0df55ced60e4e6a9b232f1958c3a819b8880d836b12b08940a8ad4b91ff90\"]},\"/home/vadim/Projects/issuing-service-package/contracts/contracts/EnergyToken.sol\":{\"keccak256\":\"0x62b9050fa2a76f5a931b9cd3c1aa4f7e6d6ec867a2c90c5e15d41b9b817197b0\",\"urls\":[\"bzzr://746aab788d93f9f048a05c3e44ba0ba02a30041fdce73488188ae6ae28ad3810\"]},\"/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/IEmitent.sol\":{\"keccak256\":\"0x6de361e18ec079c9958769176a5477d1d4dbc9669c0bcb813c8e90b88f37d6c5\",\"urls\":[\"bzzr://22b274ccab3063f8cd36a04d72ea3ff0cb382c3b01e0c279d3d8f7908f3ec2a2\"]},\"/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/ILiability.sol\":{\"keccak256\":\"0x44243c4bb60a926fef0dbd9a022ab603994d1bfc46dae725c3b9873b6092a8bd\",\"urls\":[\"bzzr://2e6ed4fe8462218219ca669dc2ef3e5f99c056636fd4bda13a1b2eebb6625dc2\"]},\"/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x63da54a7a5d4e4d82ac8d1f4f7f995fd8ef2b5fe1f2960b83e534fa37fb60910\",\"urls\":[\"bzzr://cea53b805426e40efadb24f2613aca39182462e9ecd23fde7aacf0c4b5885aaf\"]},\"/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol\":{\"keccak256\":\"0xd2c87384e7346f702df3be70e99fff30f22f7b9767a9502afb345f0457ddf36f\",\"urls\":[\"bzzr://3f300be02f06cae39a29cdf6d4f1d6b3faedf818c83c5623a512e189bdad690a\"]},\"/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol\":{\"keccak256\":\"0x110b2fab50ea257de28a8d2b03e05dc11b9e5213841dabfe784aacca8c109cda\",\"urls\":[\"bzzr://a7085973dd319349c9cfd1323e560bddc5e1db25959fd0198b2db1bd02631f72\"]},\"/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzzr://07fb42206812a17c1f71e548cfa5cec6f9aa1ae0ca5df870718ca4aa9759d1a5\"]},\"/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa5ebf3344a36eb60e723e0764d85251c496e15e4b2d737b56415502b559a1765\",\"urls\":[\"bzzr://68812cb0a1d373d12c6986f5a9314c9bae7891a07a0e301d2317fcf409102f54\"]},\"/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzzr://f280f38d5ab6e1b89fd898ccd3901054a56572c141d91d30302e2db1db4cc6ff\"]},\"/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x6df8d686813b2875e99928ecd07bf8ee6d7473bc6a95eb1190e8fdba86beda76\",\"urls\":[\"bzzr://b4a3a1136392be8723a0d9627d1626323e3891c98e88ca5ab48da1dada375580\"]},\"/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]}},\"version\":1}",
  "bytecode": "0x60806040526100163364010000000061001b810204565b61018f565b61003360008264010000000061078061006a82021704565b604051600160a060020a038216907f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129990600090a250565b61007d828264010000000061010e810204565b156100e957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821661016f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611dad6022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b611c0f8061019e6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c8576000357c0100000000000000000000000000000000000000000000000000000000900480634c5a628c116200008c5780634c5a628c14620001d35780636c4ecd8414620001dd5780637362d9c8146200020c578063bb5f747b1462000235578063d6cd9473146200025e57620000c8565b806216e52614620000cd57806310154bad1462000119578063144f5e221462000144578063291d9549146200016d5780633af32abf1462000196575b600080fd5b620000f660048036036020811015620000e557600080fd5b5035600160a060020a031662000268565b60408051600160a060020a03909316835260208301919091528051918290030190f35b62000142600480360360208110156200013157600080fd5b5035600160a060020a03166200028d565b005b62000142600480360360208110156200015c57600080fd5b5035600160a060020a0316620002e6565b62000142600480360360208110156200018557600080fd5b5035600160a060020a0316620003f8565b620001bf60048036036020811015620001ae57600080fd5b5035600160a060020a03166200044e565b604080519115158252519081900360200190f35b6200014262000469565b6200014260048036036040811015620001f557600080fd5b50600160a060020a03813516906020013562000476565b62000142600480360360208110156200022457600080fd5b5035600160a060020a031662000577565b620001bf600480360360208110156200024d57600080fd5b5035600160a060020a0316620005cd565b62000142620005e1565b60026020526000908152604090208054600190910154600160a060020a039091169082565b6200029833620005cd565b620002d85760405160e560020a62461bcd02815260040180806020018281038252604081526020018062001b6a6040913960400191505060405180910390fd5b620002e381620005ec565b50565b600160a060020a0381166000908152600260205260409020600101546200030c57600080fd5b600160a060020a038082166000908152600260209081526040808320805460019091015482517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810191909152915194169384936340c10f1993604480850194919392918390030190829087803b1580156200039157600080fd5b505af1158015620003a6573d6000803e3d6000fd5b505050506040513d6020811015620003bd57600080fd5b505050600160a060020a03166000908152600260205260408120805473ffffffffffffffffffffffffffffffffffffffff1916815560010155565b6200040333620005cd565b620004435760405160e560020a62461bcd02815260040180806020018281038252604081526020018062001b6a6040913960400191505060405180910390fd5b620002e38162000636565b60006200046360018363ffffffff6200068016565b92915050565b6200047433620006ec565b565b62000481336200044e565b620004c15760405160e560020a62461bcd02815260040180806020018281038252603a81526020018062001baa603a913960400191505060405180910390fd5b6000604051620004d19062000875565b604051809103906000f080158015620004ee573d6000803e3d6000fd5b5060408051600160a060020a03831681526020810185905281519293507f275a11e033325e9b28a23131fcc7e243a49bb38beb686051976dd8c8899d9a3c929081900390910190a1600160a060020a039283166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909316178255600190910155565b6200058233620005cd565b620005c25760405160e560020a62461bcd02815260040180806020018281038252604081526020018062001b6a6040913960400191505060405180910390fd5b620002e38162000736565b600062000463818363ffffffff6200068016565b620004743362000636565b620005ff60018263ffffffff6200078016565b604051600160a060020a038216907fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f90600090a250565b6200064960018263ffffffff6200080716565b604051600160a060020a038216907f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b690600090a250565b6000600160a060020a038216620006cc5760405160e560020a62461bcd02815260040180806020018281038252602281526020018062001b486022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b620006ff60008263ffffffff6200080716565b604051600160a060020a038216907f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16590600090a250565b6200074960008263ffffffff6200078016565b604051600160a060020a038216907f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129990600090a250565b6200078c828262000680565b15620007e2576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b62000813828262000680565b620008535760405160e560020a62461bcd02815260040180806020018281038252602181526020018062001b276021913960400191505060405180910390fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b6112a380620008848339019056fe60806040523480156200001157600080fd5b506040518060400160405280601781526020017f477265656e20436572746966696361746520546f6b656e0000000000000000008152506040518060400160405280600381526020017f474354000000000000000000000000000000000000000000000000000000000081525060038260009080519060200190620000989291906200025c565b508151620000ae9060019060208501906200025c565b506002805460ff191660ff9290921691909117905550620000da905033640100000000620000e0810204565b62000301565b620000fb60068264010000000062000d346200013282021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620001478282640100000000620001d9810204565b15620001b457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a0382166200023c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620012816022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029f57805160ff1916838001178555620002cf565b82800160010185558215620002cf579182015b82811115620002cf578251825591602001919060010190620002b2565b50620002dd929150620002e1565b5090565b620002fe91905b80821115620002dd5760008155600101620002e8565b90565b610f7080620003116000396000f3fe608060405234801561001057600080fd5b5060043610610128576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100bf578063986502751161008e578063986502751461034f578063a457c2d714610357578063a9059cbb14610383578063aa271e1a146103af578063dd62ed3e146103d557610128565b806370a08231146102cf57806379cc6790146102f557806395d89b4114610321578063983b2d561461032957610128565b8063313ce567116100fb578063313ce5671461023a578063395093511461025857806340c10f191461028457806342966c68146102b057610128565b806306fdde031461012d578063095ea7b3146101aa57806318160ddd146101ea57806323b872dd14610204575b600080fd5b610135610403565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016f578181015183820152602001610157565b50505050905090810190601f16801561019c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d6600480360360408110156101c057600080fd5b50600160a060020a038135169060200135610499565b604080519115158252519081900360200190f35b6101f26104af565b60408051918252519081900360200190f35b6101d66004803603606081101561021a57600080fd5b50600160a060020a038135811691602081013590911690604001356104b5565b61024261050c565b6040805160ff9092168252519081900360200190f35b6101d66004803603604081101561026e57600080fd5b50600160a060020a038135169060200135610515565b6101d66004803603604081101561029a57600080fd5b50600160a060020a038135169060200135610551565b6102cd600480360360208110156102c657600080fd5b50356105a4565b005b6101f2600480360360208110156102e557600080fd5b5035600160a060020a03166105b1565b6102cd6004803603604081101561030b57600080fd5b50600160a060020a0381351690602001356105cc565b6101356105da565b6102cd6004803603602081101561033f57600080fd5b5035600160a060020a031661063a565b6102cd61068a565b6101d66004803603604081101561036d57600080fd5b50600160a060020a038135169060200135610695565b6101d66004803603604081101561039957600080fd5b50600160a060020a0381351690602001356106d1565b6101d6600480360360208110156103c557600080fd5b5035600160a060020a03166106de565b6101f2600480360360408110156103eb57600080fd5b50600160a060020a03813581169160200135166106f7565b60008054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b5050505050905090565b60006104a6338484610722565b50600192915050565b60055490565b60006104c2848484610814565b600160a060020a0384166000908152600460209081526040808320338085529252909120546105029186916104fd908663ffffffff61095e16565b610722565b5060019392505050565b60025460ff1690565b336000818152600460209081526040808320600160a060020a038716845290915281205490916104a69185906104fd908663ffffffff6109be16565b600061055c336106de565b61059a5760405160e560020a62461bcd028152600401808060200182810382526030815260200180610e686030913960400191505060405180910390fd5b6104a68383610a22565b6105ae3382610b17565b50565b600160a060020a031660009081526003602052604090205490565b6105d68282610bf5565b5050565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561048f5780601f106104645761010080835404028352916020019161048f565b610643336106de565b6106815760405160e560020a62461bcd028152600401808060200182810382526030815260200180610e686030913960400191505060405180910390fd5b6105ae81610c3a565b61069333610c82565b565b336000818152600460209081526040808320600160a060020a038716845290915281205490916104a69185906104fd908663ffffffff61095e16565b60006104a6338484610814565b60006106f160068363ffffffff610cca16565b92915050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205490565b600160a060020a03831661076a5760405160e560020a62461bcd028152600401808060200182810382526024815260200180610f216024913960400191505060405180910390fd5b600160a060020a0382166107b25760405160e560020a62461bcd028152600401808060200182810382526022815260200180610e466022913960400191505060405180910390fd5b600160a060020a03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03831661085c5760405160e560020a62461bcd028152600401808060200182810382526025815260200180610efc6025913960400191505060405180910390fd5b600160a060020a0382166108a45760405160e560020a62461bcd028152600401808060200182810382526023815260200180610e236023913960400191505060405180910390fd5b600160a060020a0383166000908152600360205260409020546108cd908263ffffffff61095e16565b600160a060020a038085166000908152600360205260408082209390935590841681522054610902908263ffffffff6109be16565b600160a060020a0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156109b8576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610a1b576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a038216610a80576040805160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600554610a93908263ffffffff6109be16565b600555600160a060020a038216600090815260036020526040902054610abf908263ffffffff6109be16565b600160a060020a03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a038216610b5f5760405160e560020a62461bcd028152600401808060200182810382526021815260200180610edb6021913960400191505060405180910390fd5b600554610b72908263ffffffff61095e16565b600555600160a060020a038216600090815260036020526040902054610b9e908263ffffffff61095e16565b600160a060020a0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610bff8282610b17565b600160a060020a0382166000908152600460209081526040808320338085529252909120546105d69184916104fd908563ffffffff61095e16565b610c4b60068263ffffffff610d3416565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610c9360068263ffffffff610db816565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216610d145760405160e560020a62461bcd028152600401808060200182810382526022815260200180610eb96022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b610d3e8282610cca565b15610d93576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b610dc28282610cca565b610e005760405160e560020a62461bcd028152600401808060200182810382526021815260200180610e986021913960400191505060405180910390fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a165627a7a72305820f2b596bc5d08c6d6f146f1bd42bdf53b9c4363e8651eac16a0f42faba49b62ba0029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737357686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c6557686974656c6973746564526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c697374656420726f6c65a165627a7a72305820a57a3a5ab540138c403595d84ad0a4244cf317f66c0be3545b65434b55d4c3140029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000c8576000357c0100000000000000000000000000000000000000000000000000000000900480634c5a628c116200008c5780634c5a628c14620001d35780636c4ecd8414620001dd5780637362d9c8146200020c578063bb5f747b1462000235578063d6cd9473146200025e57620000c8565b806216e52614620000cd57806310154bad1462000119578063144f5e221462000144578063291d9549146200016d5780633af32abf1462000196575b600080fd5b620000f660048036036020811015620000e557600080fd5b5035600160a060020a031662000268565b60408051600160a060020a03909316835260208301919091528051918290030190f35b62000142600480360360208110156200013157600080fd5b5035600160a060020a03166200028d565b005b62000142600480360360208110156200015c57600080fd5b5035600160a060020a0316620002e6565b62000142600480360360208110156200018557600080fd5b5035600160a060020a0316620003f8565b620001bf60048036036020811015620001ae57600080fd5b5035600160a060020a03166200044e565b604080519115158252519081900360200190f35b6200014262000469565b6200014260048036036040811015620001f557600080fd5b50600160a060020a03813516906020013562000476565b62000142600480360360208110156200022457600080fd5b5035600160a060020a031662000577565b620001bf600480360360208110156200024d57600080fd5b5035600160a060020a0316620005cd565b62000142620005e1565b60026020526000908152604090208054600190910154600160a060020a039091169082565b6200029833620005cd565b620002d85760405160e560020a62461bcd02815260040180806020018281038252604081526020018062001b6a6040913960400191505060405180910390fd5b620002e381620005ec565b50565b600160a060020a0381166000908152600260205260409020600101546200030c57600080fd5b600160a060020a038082166000908152600260209081526040808320805460019091015482517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810191909152915194169384936340c10f1993604480850194919392918390030190829087803b1580156200039157600080fd5b505af1158015620003a6573d6000803e3d6000fd5b505050506040513d6020811015620003bd57600080fd5b505050600160a060020a03166000908152600260205260408120805473ffffffffffffffffffffffffffffffffffffffff1916815560010155565b6200040333620005cd565b620004435760405160e560020a62461bcd02815260040180806020018281038252604081526020018062001b6a6040913960400191505060405180910390fd5b620002e38162000636565b60006200046360018363ffffffff6200068016565b92915050565b6200047433620006ec565b565b62000481336200044e565b620004c15760405160e560020a62461bcd02815260040180806020018281038252603a81526020018062001baa603a913960400191505060405180910390fd5b6000604051620004d19062000875565b604051809103906000f080158015620004ee573d6000803e3d6000fd5b5060408051600160a060020a03831681526020810185905281519293507f275a11e033325e9b28a23131fcc7e243a49bb38beb686051976dd8c8899d9a3c929081900390910190a1600160a060020a039283166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909316178255600190910155565b6200058233620005cd565b620005c25760405160e560020a62461bcd02815260040180806020018281038252604081526020018062001b6a6040913960400191505060405180910390fd5b620002e38162000736565b600062000463818363ffffffff6200068016565b620004743362000636565b620005ff60018263ffffffff6200078016565b604051600160a060020a038216907fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f90600090a250565b6200064960018263ffffffff6200080716565b604051600160a060020a038216907f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b690600090a250565b6000600160a060020a038216620006cc5760405160e560020a62461bcd02815260040180806020018281038252602281526020018062001b486022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b620006ff60008263ffffffff6200080716565b604051600160a060020a038216907f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16590600090a250565b6200074960008263ffffffff6200078016565b604051600160a060020a038216907f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129990600090a250565b6200078c828262000680565b15620007e2576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b62000813828262000680565b620008535760405160e560020a62461bcd02815260040180806020018281038252602181526020018062001b276021913960400191505060405180910390fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b6112a380620008848339019056fe60806040523480156200001157600080fd5b506040518060400160405280601781526020017f477265656e20436572746966696361746520546f6b656e0000000000000000008152506040518060400160405280600381526020017f474354000000000000000000000000000000000000000000000000000000000081525060038260009080519060200190620000989291906200025c565b508151620000ae9060019060208501906200025c565b506002805460ff191660ff9290921691909117905550620000da905033640100000000620000e0810204565b62000301565b620000fb60068264010000000062000d346200013282021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620001478282640100000000620001d9810204565b15620001b457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a0382166200023c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620012816022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029f57805160ff1916838001178555620002cf565b82800160010185558215620002cf579182015b82811115620002cf578251825591602001919060010190620002b2565b50620002dd929150620002e1565b5090565b620002fe91905b80821115620002dd5760008155600101620002e8565b90565b610f7080620003116000396000f3fe608060405234801561001057600080fd5b5060043610610128576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100bf578063986502751161008e578063986502751461034f578063a457c2d714610357578063a9059cbb14610383578063aa271e1a146103af578063dd62ed3e146103d557610128565b806370a08231146102cf57806379cc6790146102f557806395d89b4114610321578063983b2d561461032957610128565b8063313ce567116100fb578063313ce5671461023a578063395093511461025857806340c10f191461028457806342966c68146102b057610128565b806306fdde031461012d578063095ea7b3146101aa57806318160ddd146101ea57806323b872dd14610204575b600080fd5b610135610403565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016f578181015183820152602001610157565b50505050905090810190601f16801561019c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d6600480360360408110156101c057600080fd5b50600160a060020a038135169060200135610499565b604080519115158252519081900360200190f35b6101f26104af565b60408051918252519081900360200190f35b6101d66004803603606081101561021a57600080fd5b50600160a060020a038135811691602081013590911690604001356104b5565b61024261050c565b6040805160ff9092168252519081900360200190f35b6101d66004803603604081101561026e57600080fd5b50600160a060020a038135169060200135610515565b6101d66004803603604081101561029a57600080fd5b50600160a060020a038135169060200135610551565b6102cd600480360360208110156102c657600080fd5b50356105a4565b005b6101f2600480360360208110156102e557600080fd5b5035600160a060020a03166105b1565b6102cd6004803603604081101561030b57600080fd5b50600160a060020a0381351690602001356105cc565b6101356105da565b6102cd6004803603602081101561033f57600080fd5b5035600160a060020a031661063a565b6102cd61068a565b6101d66004803603604081101561036d57600080fd5b50600160a060020a038135169060200135610695565b6101d66004803603604081101561039957600080fd5b50600160a060020a0381351690602001356106d1565b6101d6600480360360208110156103c557600080fd5b5035600160a060020a03166106de565b6101f2600480360360408110156103eb57600080fd5b50600160a060020a03813581169160200135166106f7565b60008054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b5050505050905090565b60006104a6338484610722565b50600192915050565b60055490565b60006104c2848484610814565b600160a060020a0384166000908152600460209081526040808320338085529252909120546105029186916104fd908663ffffffff61095e16565b610722565b5060019392505050565b60025460ff1690565b336000818152600460209081526040808320600160a060020a038716845290915281205490916104a69185906104fd908663ffffffff6109be16565b600061055c336106de565b61059a5760405160e560020a62461bcd028152600401808060200182810382526030815260200180610e686030913960400191505060405180910390fd5b6104a68383610a22565b6105ae3382610b17565b50565b600160a060020a031660009081526003602052604090205490565b6105d68282610bf5565b5050565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561048f5780601f106104645761010080835404028352916020019161048f565b610643336106de565b6106815760405160e560020a62461bcd028152600401808060200182810382526030815260200180610e686030913960400191505060405180910390fd5b6105ae81610c3a565b61069333610c82565b565b336000818152600460209081526040808320600160a060020a038716845290915281205490916104a69185906104fd908663ffffffff61095e16565b60006104a6338484610814565b60006106f160068363ffffffff610cca16565b92915050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205490565b600160a060020a03831661076a5760405160e560020a62461bcd028152600401808060200182810382526024815260200180610f216024913960400191505060405180910390fd5b600160a060020a0382166107b25760405160e560020a62461bcd028152600401808060200182810382526022815260200180610e466022913960400191505060405180910390fd5b600160a060020a03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03831661085c5760405160e560020a62461bcd028152600401808060200182810382526025815260200180610efc6025913960400191505060405180910390fd5b600160a060020a0382166108a45760405160e560020a62461bcd028152600401808060200182810382526023815260200180610e236023913960400191505060405180910390fd5b600160a060020a0383166000908152600360205260409020546108cd908263ffffffff61095e16565b600160a060020a038085166000908152600360205260408082209390935590841681522054610902908263ffffffff6109be16565b600160a060020a0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156109b8576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610a1b576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a038216610a80576040805160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600554610a93908263ffffffff6109be16565b600555600160a060020a038216600090815260036020526040902054610abf908263ffffffff6109be16565b600160a060020a03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a038216610b5f5760405160e560020a62461bcd028152600401808060200182810382526021815260200180610edb6021913960400191505060405180910390fd5b600554610b72908263ffffffff61095e16565b600555600160a060020a038216600090815260036020526040902054610b9e908263ffffffff61095e16565b600160a060020a0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610bff8282610b17565b600160a060020a0382166000908152600460209081526040808320338085529252909120546105d69184916104fd908563ffffffff61095e16565b610c4b60068263ffffffff610d3416565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610c9360068263ffffffff610db816565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216610d145760405160e560020a62461bcd028152600401808060200182810382526022815260200180610eb96022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b610d3e8282610cca565b15610d93576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b610dc28282610cca565b610e005760405160e560020a62461bcd028152600401808060200182810382526021815260200180610e986021913960400191505060405180910390fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a165627a7a72305820f2b596bc5d08c6d6f146f1bd42bdf53b9c4363e8651eac16a0f42faba49b62ba0029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737357686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c6557686974656c6973746564526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c697374656420726f6c65a165627a7a72305820a57a3a5ab540138c403595d84ad0a4244cf317f66c0be3545b65434b55d4c3140029",
  "sourceMap": "219:1109:1:-;;;433:30:9;452:10;433:18;;;;:30;:::i;:::-;219:1109:1;;991:143:9;1055:29;:16;1076:7;1055:20;;;;;;:29;:::i;:::-;1099:28;;-1:-1:-1;;;;;1099:28:9;;;;;;;;991:143;:::o;260:175:7:-;337:18;341:4;347:7;337:3;;;;:18;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:7;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:7;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:7;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:7;:11;:20;;;;;;;;;;;;;;;779:200::o;219:1109:1:-;;;;;;;",
  "deployedSourceMap": "219:1109:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;219:1109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;520:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;520:51:1;-1:-1:-1;;;;;520:51:1;;:::i;:::-;;;;-1:-1:-1;;;;;520:51:1;;;;;;;;;;;;;;;;;;;;;910:108:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;910:108:10;-1:-1:-1;;;;;910:108:10;;:::i;:::-;;921:405:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;921:405:1;-1:-1:-1;;;;;921:405:1;;:::i;1024:114:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1024:114:10;-1:-1:-1;;;;;1024:114:10;;:::i;787:117::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;787:117:10;-1:-1:-1;;;;;787:117:10;;:::i;:::-;;;;;;;;;;;;;;;;;;894:91:9;;;:::i;578:337:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;578:337:1;;;;;;;;:::i;774:114:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;774:114:9;-1:-1:-1;;;;;774:114:9;;:::i;645:123::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;645:123:9;-1:-1:-1;;;;;645:123:9;;:::i;1144:85:10:-;;;:::i;520:51:1:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;520:51:1;;;;;:::o;910:108:10:-;524:28:9;541:10;524:16;:28::i;:::-;516:105;;;;-1:-1:-1;;;;;516:105:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:24:10;1003:7;987:15;:24::i;:::-;910:108;:::o;921:405:1:-;-1:-1:-1;;;;;993:23:1;;1025:1;993:23;;;:12;:23;;;;;:29;;;985:42;;;;;;-1:-1:-1;;;;;1128:23:1;;;1095:18;1128:23;;;:12;:23;;;;;;;;:29;;;1192;;;;1168:54;;;;;1180:10;1168:54;;;;;;;;;;;;;1128:29;;;;;1168:11;;:54;;;;;1128:23;;1168:54;;;;;;;;;1128:29;1168:54;;;5:2:-1;;;;30:1;27;20:12;5:2;1168:54:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1168:54:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;;;1296:23:1;;;;;:12;1168:54;1296:23;;;;1289:30;;-1:-1:-1;;1289:30:1;;;;;;921:405::o;1024:114:10:-;524:28:9;541:10;524:16;:28::i;:::-;516:105;;;;-1:-1:-1;;;;;516:105:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:27:10;1123:7;1104:18;:27::i;787:117::-;848:4;871:26;:13;889:7;871:26;:17;:26;:::i;:::-;864:33;787:117;-1:-1:-1;;787:117:10:o;894:91:9:-;945:33;967:10;945:21;:33::i;:::-;894:91::o;578:337:1:-;675:25:10;689:10;675:13;:25::i;:::-;667:96;;;;-1:-1:-1;;;;;667:96:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;730:14:1;747:17;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;780:28:1;;;-1:-1:-1;;;;;780:28:1;;;;;;;;;;;;730:34;;-1:-1:-1;780:28:1;;;;;;;;;;;-1:-1:-1;;;;;818:23:1;;;;;;;:12;:23;;;;;:43;;-1:-1:-1;;818:43:1;;;;;;;;-1:-1:-1;871:29:1;;;:37;578:337::o;774:114:9:-;524:28;541:10;524:16;:28::i;:::-;516:105;;;;-1:-1:-1;;;;;516:105:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:27;873:7;854:18;:27::i;645:123::-;709:4;732:29;709:4;753:7;732:29;:20;:29;:::i;1144:85:10:-;1192:30;1211:10;1192:18;:30::i;1235:134::-;1296:26;:13;1314:7;1296:26;:17;:26;:::i;:::-;1337:25;;-1:-1:-1;;;;;1337:25:10;;;;;;;;1235:134;:::o;1375:142::-;1439:29;:13;1460:7;1439:29;:20;:29;:::i;:::-;1483:27;;-1:-1:-1;;;;;1483:27:10;;;;;;;;1375:142;:::o;779:200:7:-;851:4;-1:-1:-1;;;;;875:21:7;;867:68;;;;-1:-1:-1;;;;;867:68:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:7;:11;:20;;;;;;;;;;;;;;;779:200::o;1140:151:9:-;1207:32;:16;1231:7;1207:32;:23;:32;:::i;:::-;1254:30;;-1:-1:-1;;;;;1254:30:9;;;;;;;;1140:151;:::o;991:143::-;1055:29;:16;1076:7;1055:29;:20;:29;:::i;:::-;1099:28;;-1:-1:-1;;;;;1099:28:9;;;;;;;;991:143;:::o;260:175:7:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;;;328:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:7;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:7;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;;;581:64:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:7;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:7;;;510:180::o;219:1109:1:-;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport './interfaces/ILiability.sol';\nimport './interfaces/IEmitent.sol';\nimport '../node_modules/openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol';\nimport './EnergyToken.sol';\n\ncontract Emitter is WhitelistedRole, IEmitter {\n    /**\n     * @dev Green certificate\n     */\n    struct Certificate {\n        address token;\n        uint256 value;\n    }\n\n    event NewToken(address addr, uint256 value);\n\n    /**\n     * @dev Green certificate mapping by liability address\n     */\n    mapping(address => Certificate) public certificates;\n\n    function issueCertificate(address liability, uint256 value) external onlyWhitelisted {\n        // require(certificates[liability].value == 0);\n\n        EnergyToken et = new EnergyToken();\n\n        emit NewToken(address(et), value);\n        certificates[liability].token = address(et);\n        certificates[liability].value = value;\n    }\n\n    function claimCertificate(address liability) external {\n        require(certificates[liability].value > 0);\n        // require(ILiability(liability).isFinalized());\n\n        EnergyToken _token = EnergyToken(certificates[liability].token);\n        _token.mint(msg.sender, certificates[liability].value);\n\n        // Free storage space, for a gas refund reasons\n        delete certificates[liability];\n    }\n}\n\n",
  "sourcePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/Emitter.sol",
  "ast": {
    "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/Emitter.sol",
    "exportedSymbols": {
      "Emitter": [
        135
      ]
    },
    "id": 136,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 32,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/ILiability.sol",
        "file": "./interfaces/ILiability.sol",
        "id": 33,
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 268,
        "src": "25:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/IEmitent.sol",
        "file": "./interfaces/IEmitent.sol",
        "id": 34,
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 229,
        "src": "63:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 677,
        "src": "99:90:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/EnergyToken.sol",
        "file": "./EnergyToken.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 157,
        "src": "190:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37,
              "name": "WhitelistedRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 676,
              "src": "239:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedRole_$676",
                "typeString": "contract WhitelistedRole"
              }
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "239:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 39,
              "name": "IEmitter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 228,
              "src": "256:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEmitter_$228",
                "typeString": "contract IEmitter"
              }
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "256:8:1"
          }
        ],
        "contractDependencies": [
          156,
          228,
          566,
          676
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 135,
        "linearizedBaseContracts": [
          135,
          228,
          676,
          566
        ],
        "name": "Emitter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Emitter.Certificate",
            "id": 45,
            "members": [
              {
                "constant": false,
                "id": 42,
                "name": "token",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "346:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 41,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "369:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "369:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Certificate",
            "nodeType": "StructDefinition",
            "scope": 135,
            "src": "317:72:1",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 51,
            "name": "NewToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "410:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "424:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:29:1"
            },
            "src": "395:44:1"
          },
          {
            "constant": false,
            "id": 55,
            "name": "certificates",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "520:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
              "typeString": "mapping(address => struct Emitter.Certificate)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "528:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "520:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                "typeString": "mapping(address => struct Emitter.Certificate)"
              },
              "valueType": {
                "contractScope": null,
                "id": 53,
                "name": "Certificate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 45,
                "src": "539:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Certificate_$45_storage_ptr",
                  "typeString": "struct Emitter.Certificate"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "663:252:1",
              "statements": [
                {
                  "assignments": [
                    65
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65,
                      "name": "et",
                      "nodeType": "VariableDeclaration",
                      "scope": 93,
                      "src": "730:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EnergyToken_$156",
                        "typeString": "contract EnergyToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 64,
                        "name": "EnergyToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 156,
                        "src": "730:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EnergyToken_$156",
                          "typeString": "contract EnergyToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "747:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EnergyToken_$156_$",
                        "typeString": "function () returns (contract EnergyToken)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 66,
                        "name": "EnergyToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 156,
                        "src": "751:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EnergyToken_$156",
                          "typeString": "contract EnergyToken"
                        }
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EnergyToken_$156",
                      "typeString": "contract EnergyToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "730:34:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "et",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "797:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EnergyToken_$156",
                              "typeString": "contract EnergyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EnergyToken_$156",
                              "typeString": "contract EnergyToken"
                            }
                          ],
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "789:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "789:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "802:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 70,
                      "name": "NewToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "780:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "780:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "EmitStatement",
                  "src": "775:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 77,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "818:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                            "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                          }
                        },
                        "id": 79,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "liability",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "831:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "818:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$45_storage",
                          "typeString": "struct Emitter.Certificate storage ref"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "818:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "et",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "858:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EnergyToken_$156",
                            "typeString": "contract EnergyToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_EnergyToken_$156",
                            "typeString": "contract EnergyToken"
                          }
                        ],
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "850:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "850:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "818:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "818:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 86,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "871:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                            "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                          }
                        },
                        "id": 88,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "liability",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "884:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "871:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$45_storage",
                          "typeString": "struct Emitter.Certificate storage ref"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "871:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "903:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "871:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "871:37:1"
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 62,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 61,
                  "name": "onlyWhitelisted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 597,
                  "src": "647:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "647:15:1"
              }
            ],
            "name": "issueCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "name": "liability",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "604:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "623:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:34:1"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:1"
            },
            "scope": 135,
            "src": "578:337:1",
            "stateMutability": "nonpayable",
            "superFunction": 222,
            "visibility": "external"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "975:351:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 100,
                              "name": "certificates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "993:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                                "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                              }
                            },
                            "id": 102,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 101,
                              "name": "liability",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "1006:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "993:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Certificate_$45_storage",
                              "typeString": "struct Emitter.Certificate storage ref"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "993:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1025:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "993:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1410,
                        1411
                      ],
                      "referencedDeclaration": 1410,
                      "src": "985:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "985:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "985:42:1"
                },
                {
                  "assignments": [
                    109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 109,
                      "name": "_token",
                      "nodeType": "VariableDeclaration",
                      "scope": 133,
                      "src": "1095:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EnergyToken_$156",
                        "typeString": "contract EnergyToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 108,
                        "name": "EnergyToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 156,
                        "src": "1095:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EnergyToken_$156",
                          "typeString": "contract EnergyToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 116,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 111,
                            "name": "certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1128:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                              "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                            }
                          },
                          "id": 113,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "liability",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1141:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1128:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Certificate_$45_storage",
                            "typeString": "struct Emitter.Certificate storage ref"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "1128:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 110,
                      "name": "EnergyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1116:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_EnergyToken_$156_$",
                        "typeString": "type(contract EnergyToken)"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EnergyToken_$156",
                      "typeString": "contract EnergyToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1095:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1407,
                          "src": "1180:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1180:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1192:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                              "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                            }
                          },
                          "id": 124,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "liability",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1205:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1192:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Certificate_$45_storage",
                            "typeString": "struct Emitter.Certificate storage ref"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44,
                        "src": "1192:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1168:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EnergyToken_$156",
                          "typeString": "contract EnergyToken"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1322,
                      "src": "1168:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1168:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:54:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1289:30:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "certificates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1296:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                          "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                        }
                      },
                      "id": 130,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "liability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1309:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1296:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Certificate_$45_storage",
                        "typeString": "struct Emitter.Certificate storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "liability",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "947:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "946:19:1"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:0:1"
            },
            "scope": 135,
            "src": "921:405:1",
            "stateMutability": "nonpayable",
            "superFunction": 227,
            "visibility": "external"
          }
        ],
        "scope": 136,
        "src": "219:1109:1"
      }
    ],
    "src": "0:1330:1"
  },
  "legacyAST": {
    "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/Emitter.sol",
    "exportedSymbols": {
      "Emitter": [
        135
      ]
    },
    "id": 136,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 32,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/ILiability.sol",
        "file": "./interfaces/ILiability.sol",
        "id": 33,
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 268,
        "src": "25:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/interfaces/IEmitent.sol",
        "file": "./interfaces/IEmitent.sol",
        "id": 34,
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 229,
        "src": "63:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/node_modules/openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 677,
        "src": "99:90:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/vadim/Projects/issuing-service-package/contracts/contracts/EnergyToken.sol",
        "file": "./EnergyToken.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 157,
        "src": "190:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37,
              "name": "WhitelistedRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 676,
              "src": "239:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedRole_$676",
                "typeString": "contract WhitelistedRole"
              }
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "239:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 39,
              "name": "IEmitter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 228,
              "src": "256:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEmitter_$228",
                "typeString": "contract IEmitter"
              }
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "256:8:1"
          }
        ],
        "contractDependencies": [
          156,
          228,
          566,
          676
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 135,
        "linearizedBaseContracts": [
          135,
          228,
          676,
          566
        ],
        "name": "Emitter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Emitter.Certificate",
            "id": 45,
            "members": [
              {
                "constant": false,
                "id": 42,
                "name": "token",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "346:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 41,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "369:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "369:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Certificate",
            "nodeType": "StructDefinition",
            "scope": 135,
            "src": "317:72:1",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 51,
            "name": "NewToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "410:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "424:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:29:1"
            },
            "src": "395:44:1"
          },
          {
            "constant": false,
            "id": 55,
            "name": "certificates",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "520:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
              "typeString": "mapping(address => struct Emitter.Certificate)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "528:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "520:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                "typeString": "mapping(address => struct Emitter.Certificate)"
              },
              "valueType": {
                "contractScope": null,
                "id": 53,
                "name": "Certificate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 45,
                "src": "539:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Certificate_$45_storage_ptr",
                  "typeString": "struct Emitter.Certificate"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "663:252:1",
              "statements": [
                {
                  "assignments": [
                    65
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65,
                      "name": "et",
                      "nodeType": "VariableDeclaration",
                      "scope": 93,
                      "src": "730:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EnergyToken_$156",
                        "typeString": "contract EnergyToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 64,
                        "name": "EnergyToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 156,
                        "src": "730:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EnergyToken_$156",
                          "typeString": "contract EnergyToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "747:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EnergyToken_$156_$",
                        "typeString": "function () returns (contract EnergyToken)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 66,
                        "name": "EnergyToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 156,
                        "src": "751:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EnergyToken_$156",
                          "typeString": "contract EnergyToken"
                        }
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EnergyToken_$156",
                      "typeString": "contract EnergyToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "730:34:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "et",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "797:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EnergyToken_$156",
                              "typeString": "contract EnergyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EnergyToken_$156",
                              "typeString": "contract EnergyToken"
                            }
                          ],
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "789:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "789:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "802:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 70,
                      "name": "NewToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "780:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "780:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "EmitStatement",
                  "src": "775:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 77,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "818:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                            "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                          }
                        },
                        "id": 79,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "liability",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "831:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "818:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$45_storage",
                          "typeString": "struct Emitter.Certificate storage ref"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "818:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "et",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "858:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EnergyToken_$156",
                            "typeString": "contract EnergyToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_EnergyToken_$156",
                            "typeString": "contract EnergyToken"
                          }
                        ],
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "850:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "850:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "818:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "818:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 86,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "871:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                            "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                          }
                        },
                        "id": 88,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "liability",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "884:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "871:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$45_storage",
                          "typeString": "struct Emitter.Certificate storage ref"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "871:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "903:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "871:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "871:37:1"
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 62,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 61,
                  "name": "onlyWhitelisted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 597,
                  "src": "647:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "647:15:1"
              }
            ],
            "name": "issueCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "name": "liability",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "604:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "623:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:34:1"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:1"
            },
            "scope": 135,
            "src": "578:337:1",
            "stateMutability": "nonpayable",
            "superFunction": 222,
            "visibility": "external"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "975:351:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 100,
                              "name": "certificates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "993:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                                "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                              }
                            },
                            "id": 102,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 101,
                              "name": "liability",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "1006:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "993:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Certificate_$45_storage",
                              "typeString": "struct Emitter.Certificate storage ref"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "993:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1025:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "993:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1410,
                        1411
                      ],
                      "referencedDeclaration": 1410,
                      "src": "985:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "985:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "985:42:1"
                },
                {
                  "assignments": [
                    109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 109,
                      "name": "_token",
                      "nodeType": "VariableDeclaration",
                      "scope": 133,
                      "src": "1095:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EnergyToken_$156",
                        "typeString": "contract EnergyToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 108,
                        "name": "EnergyToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 156,
                        "src": "1095:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EnergyToken_$156",
                          "typeString": "contract EnergyToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 116,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 111,
                            "name": "certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1128:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                              "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                            }
                          },
                          "id": 113,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "liability",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1141:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1128:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Certificate_$45_storage",
                            "typeString": "struct Emitter.Certificate storage ref"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "1128:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 110,
                      "name": "EnergyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1116:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_EnergyToken_$156_$",
                        "typeString": "type(contract EnergyToken)"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EnergyToken_$156",
                      "typeString": "contract EnergyToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1095:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1407,
                          "src": "1180:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1180:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1192:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                              "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                            }
                          },
                          "id": 124,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "liability",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1205:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1192:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Certificate_$45_storage",
                            "typeString": "struct Emitter.Certificate storage ref"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44,
                        "src": "1192:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1168:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EnergyToken_$156",
                          "typeString": "contract EnergyToken"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1322,
                      "src": "1168:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1168:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:54:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1289:30:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "certificates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1296:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Certificate_$45_storage_$",
                          "typeString": "mapping(address => struct Emitter.Certificate storage ref)"
                        }
                      },
                      "id": 130,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "liability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1309:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1296:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Certificate_$45_storage",
                        "typeString": "struct Emitter.Certificate storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "liability",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "947:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "946:19:1"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:0:1"
            },
            "scope": 135,
            "src": "921:405:1",
            "stateMutability": "nonpayable",
            "superFunction": 227,
            "visibility": "external"
          }
        ],
        "scope": 136,
        "src": "219:1109:1"
      }
    ],
    "src": "0:1330:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {
    "4451": {
      "events": {
        "0x275a11e033325e9b28a23131fcc7e243a49bb38beb686051976dd8c8899d9a3c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "addr",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "NewToken",
          "type": "event",
          "signature": "0x275a11e033325e9b28a23131fcc7e243a49bb38beb686051976dd8c8899d9a3c"
        },
        "0xee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistedAdded",
          "type": "event",
          "signature": "0xee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f"
        },
        "0x270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistedRemoved",
          "type": "event",
          "signature": "0x270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b6"
        },
        "0x22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd20961299": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistAdminAdded",
          "type": "event",
          "signature": "0x22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd20961299"
        },
        "0x0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e165": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistAdminRemoved",
          "type": "event",
          "signature": "0x0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e165"
        }
      },
      "links": {},
      "address": "0xA3d99c9784bCE2AB8E69B6Af921566c87F1017d9",
      "transactionHash": "0xb724bc90dd7425868af5d3fdb7b9a217fd1a52d8d9cabf9b948c071661ee1bfd"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-26T12:37:56.180Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}