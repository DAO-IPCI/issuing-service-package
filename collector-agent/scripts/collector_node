#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Standart, System and Third party
import psycopg2
import sys
from http.client import HTTPSConnection
from base64 import b64encode
from time import sleep
from threading import Timer

# ROS
import rospy


class CollectorNode:

    def __init__(self):
        rospy.init_node('collector')
        rospy.loginfo('Launching collector node...')

        try:
            # Put user name, password etc
            self.connection = psycopg2.connect(
                user=rospy.get_param('~user'),
                password=rospy.get_param('~password'),
                host=rospy.get_param('~host'),
                port=rospy.get_param('~port'),
                database=rospy.get_param('~database'))
            cursor = self.connection.cursor()
            # Print PostgreSQL Connection properties
            print(self.connection.get_dsn_parameters(), "\n")
            # Print PostgreSQL version
            cursor.execute("SELECT version();")
            record = cursor.fetchone()
            print("You are connected to - ", record, "\n")

        except (Exception, psycopg2.Error) as error:
            print("Error while connecting to PostgreSQL", error)
            sys.exit()

        self.rest_api_key = rospy.get_param('~rest_api_key')

        rospy.loginfo('Collector node is ready!')

    def spin(self):
        def collect_data():
            c = HTTPSConnection("rest01.alphaopen.com")
            userAndPass = b64encode(
                bytes(self.rest_api_key, 'utf-8')).decode("ascii")
            headers = {'Authorization': 'Basic %s' % userAndPass}

            print("getting data...")
            try:
                c.request('GET', '/api/v1/object/', headers=headers)
                # get the response back
                res = c.getresponse()
            except:
                print("Got an error. Retrying...")
                sleep(10)
                continue

            if res.status != 200:
                sleep(10)
                continue

            # at this point you could check the status etc
            # this gets the page text
            data = res.read().decode("utf-8")

            print("Got it! {}...".format(data[:20]))

            cursor = self.connection.cursor()
            cursor.execute(
                "INSERT INTO solar (measure) VALUES ('{}');".format(data))
            self.connection.commit()

            print("Waiting 60 sec")
            Timer(60, collect_data).start()

        collect_data()
        rospy.spin()


if __name__ == '__main__':
    CollectorNode().spin()
